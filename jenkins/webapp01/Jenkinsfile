pipeline {
    agent any
    environment {
      GITHUB_ORGANIZATION = "KoolKubernetes"
      GITHUB_REPO = "cicd"
      REPOSITORY_TAG="${DOCKERHUB_REGISTRY}:${env.BUILD_ID}"
      APP_PATH="jenkins/webapp01"
    }
    stages {
      stage ('PREPARATION') {
          steps {
                    cleanWs()
                    // git credentialsId: 'GitHub', url: "https://github.com/${GITHUB_ORGANIZATION}/${GITHUB_REPO}"
                    git url: "https://github.com/${GITHUB_ORGANIZATION}/${GITHUB_REPO}"
          }
      }

      stage ('BUILD') {
          when {
                branch "master"
                anyOf {
                    changeset "jenkins/webapp01/package.json"
                }
          }

          steps {
             sh 'npm install --prefix ${WORKSPACE}/${APP_PATH}'
          }
      }

      stage ('PUBLISH') {
          when {
                branch "master"
                anyOf {
                    changeset "jenkins/webapp01/package.json"
                }
          }
          environment {
              // make sure below credential is stored in Jenkins global credentials.
              registryCredential = 'dockerhub'
          }
          steps {
              script {
                  def appimage = docker.build ("${DOCKERHUB_REGISTRY}:${env.BUILD_ID}", "--network host ${WORKSPACE}/${APP_PATH}")
                         	docker.withRegistry( '', registryCredential ) {
                        	appimage.push()
                        	appimage.push('latest')
                   }
              	 }
          }
      }
      stage ('DEPLOY') {
          when {
                branch "master"
                anyOf {
                    changeset "jenkins/webapp01/package.json"
                    changeset "jenkins/webapp01/k8s/**"
                }
          }
          steps {
              sh 'envsubst < ${WORKSPACE}/${APP_PATH}/k8s/app.yaml | kubectl apply -f -'
          }
        }
      }
}
